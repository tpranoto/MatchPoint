// Mocks generated by Mockito 5.4.5 from annotations
// in matchpoint/test/profile_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:matchpoint/providers/profile_provider.dart' as _i6;
import 'package:matchpoint/services/auth.dart' as _i3;
import 'package:matchpoint/services/firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirestoreService_0 extends _i1.SmartFake
    implements _i2.FirestoreService {
  _FakeFirestoreService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  @override
  _i4.Stream<_i5.User?> get loginChanges =>
      (super.noSuchMethod(
            Invocation.getter(#loginChanges),
            returnValue: _i4.Stream<_i5.User?>.empty(),
            returnValueForMissingStub: _i4.Stream<_i5.User?>.empty(),
          )
          as _i4.Stream<_i5.User?>);

  @override
  _i4.Future<_i5.User?> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i4.Future<_i5.User?>.value(),
            returnValueForMissingStub: _i4.Future<_i5.User?>.value(),
          )
          as _i4.Future<_i5.User?>);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [AppProfileProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppProfileProvider extends _i1.Mock
    implements _i6.AppProfileProvider {
  @override
  _i2.FirestoreService get firestoreService =>
      (super.noSuchMethod(
            Invocation.getter(#firestoreService),
            returnValue: _FakeFirestoreService_0(
              this,
              Invocation.getter(#firestoreService),
            ),
            returnValueForMissingStub: _FakeFirestoreService_0(
              this,
              Invocation.getter(#firestoreService),
            ),
          )
          as _i2.FirestoreService);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i4.Future<void> loadAndSaveProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#loadAndSaveProfile, [uid]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void saveProfileFromUser(_i5.User? gUser) => super.noSuchMethod(
    Invocation.method(#saveProfileFromUser, [gUser]),
    returnValueForMissingStub: null,
  );

  @override
  void removeProfile() => super.noSuchMethod(
    Invocation.method(#removeProfile, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
