// Mocks generated by Mockito 5.4.5 from annotations
// in matchpoint/test/profile_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:matchpoint/models/profile.dart' as _i4;
import 'package:matchpoint/services/firestore.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i3.FirestoreService {
  @override
  _i2.CollectionReference<Object?> get profileRef =>
      (super.noSuchMethod(
            Invocation.getter(#profileRef),
            returnValue: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#profileRef),
            ),
            returnValueForMissingStub: _FakeCollectionReference_0<Object?>(
              this,
              Invocation.getter(#profileRef),
            ),
          )
          as _i2.CollectionReference<Object?>);

  @override
  _i4.Profile? addProfileIfNotExists(_i4.Profile? currProf) =>
      (super.noSuchMethod(
            Invocation.method(#addProfileIfNotExists, [currProf]),
            returnValueForMissingStub: null,
          )
          as _i4.Profile?);

  @override
  _i5.Future<_i4.Profile?> getById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [id]),
            returnValue: _i5.Future<_i4.Profile?>.value(),
            returnValueForMissingStub: _i5.Future<_i4.Profile?>.value(),
          )
          as _i5.Future<_i4.Profile?>);
}
